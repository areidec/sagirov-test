{"version":3,"sources":["components/icons/EyeSvg.js","components/icons/SuccesSvg.js","components/input/index.js","components/SingInForm/index.js","components/CheckBox/index.js","components/RegistForm/index.js","components/ModalWindow/index.js","components/App/index.js","index.js"],"names":["EyeSvg","className","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","SuccessSvg","Input","propsInput","name","label","type","validators","errorTypes","mask","register","errors","getValues","classNames","useState","value","setValue","typeInput","setType","trim","length","input","onChange","e","target","ref","id","htmlFor","onClick","SingInForm","setModal","useForm","handleSubmit","reset","setError","onSubmit","data","firstName","password","users","JSON","parse","localStorage","getItem","user","filter","email","tel","Base64","decode","isShow","title","setTimeout","Object","values","required","notFound","inCorrect","map","key","to","CheckBox","console","log","checked","RegistForm","userData","encode","replace","push","setItem","stringify","nickName","pattern","validate","agree","ModalWindow","App","modal","showModal","path","exact","match","CSSTransition","in","timeout","unmountOnExit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e140db44.chunk.js","sourcesContent":["import React from 'react';\n\nconst EyeSvg = ({ className }) => (\n  <svg width=\"19\" height=\"14\" viewBox=\"0 0 19 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M12.1134 6.99999C12.1134 7.68197 11.8425 8.33603 11.3603 8.81826C10.878 9.3005 10.224 9.57142 9.54201 9.57142C8.86002 9.57142 8.20597 9.3005 7.72373 8.81826C7.2415 8.33603 6.97058 7.68197 6.97058 6.99999C6.97058 6.318 7.2415 5.66395 7.72373 5.18171C8.20597 4.69948 8.86002 4.42856 9.54201 4.42856C10.224 4.42856 10.878 4.69948 11.3603 5.18171C11.8425 5.66395 12.1134 6.318 12.1134 6.99999V6.99999Z\" stroke=\"#C4C4C4\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n    <path d=\"M1.36316 7C2.45516 3.52257 5.70459 1 9.54202 1C13.3803 1 16.6289 3.52257 17.7209 7C16.6289 10.4774 13.3803 13 9.54202 13C5.70459 13 2.45516 10.4774 1.36316 7V7Z\" stroke=\"#C4C4C4\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n  </svg>\n);\n\nexport default EyeSvg;","import React from 'react';\n\nconst SuccessSvg = ({ className }) => (\n  <svg className={className} width=\"186\" height=\"186\" viewBox=\"0 0 186 186\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M93 0.25C41.7805 0.25 0.25 41.7805 0.25 93C0.25 144.22 41.7805 185.75 93 185.75C144.22 185.75 185.75 144.22 185.75 93C185.75 41.7805 144.22 0.25 93 0.25ZM133.061 62.7113L89.4598 123.164C88.8504 124.015 88.047 124.708 87.1163 125.186C86.1856 125.664 85.1543 125.914 84.108 125.914C83.0617 125.914 82.0304 125.664 81.0997 125.186C80.169 124.708 79.3656 124.015 78.7563 123.164L52.9395 87.3895C52.1527 86.2922 52.9395 84.7602 54.2852 84.7602H63.9949C66.1066 84.7602 68.1148 85.7746 69.357 87.5137L84.0977 107.968L116.643 62.8355C117.885 61.1172 119.873 60.082 122.005 60.082H131.715C133.061 60.082 133.847 61.6141 133.061 62.7113Z\" fill=\"black\"/>\n  </svg>\n);\n\nexport default SuccessSvg;","import React, {useState} from 'react';\nimport InputMask from 'react-input-mask';\nimport {EyeSvg} from '../icons';\n\nconst Input = ({ \n  propsInput: {\n    name, label, type = 'text' , validators, errorTypes, mask\n  },\n  register,\n  errors,\n  getValues,\n  }) => {\n  let classNames = '';\n  const [ value, setValue ] = useState('');\n  const [ typeInput, setType ] = useState(type);\n  \n  if(value.trim().length > 0) {\n    classNames = ' not-empty';\n  }\n\n  const toggleVisiblePass = () => {\n    if (typeInput === 'password') {\n      setType('text');\n    } else {\n      setType('password');\n    }\n  }\n\n  const input = mask ? \n  <InputMask\n    mask={mask}\n    onChange={(e) => {\n      setValue(e.target.value);\n    }}\n    name={name}\n    value={getValues('tel')}\n  >\n    {() => <input  ref={register({...validators})} className={classNames} id={name} name={name} type={typeInput}  />}\n  </InputMask> :\n  <input\n    onChange={(e) => setValue(e.target.value)}\n    className={classNames}\n    id={name} name={name} \n    type={typeInput} ref={register({...validators})} />;\n  return (\n    <div className='form__control'>\n      {input}\n      <label htmlFor={name}>{label}</label>\n      <div className='under-line'></div>\n      { name === 'password' ? \n          <button type='button' className='btn password-btn' onClick={toggleVisiblePass}><EyeSvg /></button> : null}\n      { errors[name] && <p className='error'>{errorTypes[errors[name].type]}</p> }\n    </div>\n  )\n}\n\nexport default Input;","import React from 'react';\nimport {useForm} from 'react-hook-form';\nimport {\n  Link\n} from 'react-router-dom';\nimport { Base64 } from 'js-base64';\n\nimport Input from '../input';\n\nconst SingInForm = ({setModal}) => {\n  \n  const { handleSubmit, register, errors, reset, getValues, setError } = useForm();\n\n  const onSubmit = data => {\n    const { firstName, password } = data;\n    let users = JSON.parse(localStorage.getItem('users'));\n    if (!users) {\n      setError('firstName', 'notFound');\n    } else {\n      const user = users.filter(user => user.email === firstName || user.tel === firstName );\n\n      if(user.length > 0 && Base64.decode(user[0].password) === password) {\n        setModal({ isShow: true, title: 'Вы зарегистрированы' });\n        setTimeout(() => {\n          setModal({ isShow: false, title: 'Вы зарегистрированы' });\n        }, 5000);\n        setTimeout(() => {\n          setModal({ isShow: false, title: '' });\n        }, 6000);\n        reset();\n      } else {\n        setError('password', 'inCorrect');\n      }\n\n    }\n  };\n\n  const inputs = {\n    firstName: {\n      name: 'firstName',\n      label: 'Email или номер телефона',\n      errorTypes: {\n        required: 'Это поле обязательно для заполнения',\n        notFound: 'Данного пользователя не существует'\n      },\n      validators: {\n        required: true\n      }\n    },\n    password: {\n      name: 'password',\n      label: 'Пароль',\n      type: 'password',\n      errorTypes: {\n        required: 'Это поле обязательно для заполнения',\n        inCorrect: 'Пароль не верен'\n      },\n      validators: {\n        required: true\n      }\n    }\n  }\n\n  \n\n  return (\n    <form className='form' onSubmit={handleSubmit(onSubmit)}>\n      <h1 className='form__title'>Вход</h1>\n      <p className='form__under-title'>Введите свои данные</p>\n      <div className='form__body'>\n        {\n          Object.values(inputs).map(({...values}) => {\n            return <Input propsInput={values} key={values.name} errors={errors} register={register} getValues={getValues} />\n          })\n        }\n        <div className='form__submit'>\n          <button className='btn btn-rect' type='submit'>Войти</button>\n        </div>\n        <div className='form__footer'>\n          <p>Нет аккаунта? <Link to='/'>Зарегистрироваться</Link></p>\n        </div>\n      </div>\n    </form>\n  )\n}\n\nexport default SingInForm;","import React from 'react';\n\nconst CheckBox = ({\n  propsInput: {\n    name, label, validators, errorTypes\n  },\n  register,\n  errors\n}) => {\n  return (\n    <div className='form__control'>\n      <div className='checkbox'>\n        <input \n          name={name}\n          ref={register({...validators})}\n          onChange={(e)=> console.log(e.target.checked)}\n          type='checkbox' \n          id={name} />\n        <label htmlFor={name}>{label}</label>\n      </div>\n      { errors[name] && <p className='error'>{errorTypes[errors[name].type]}</p> }\n    </div>\n  )\n}\n\nexport default CheckBox;","import React from 'react';\nimport {useForm} from 'react-hook-form';\nimport {\n  Link\n} from 'react-router-dom';\n\nimport { Base64 } from 'js-base64';\n\nimport Input from '../input';\nimport CheckBox from '../CheckBox';\n\nconst RegistForm = ({ setModal }) => {\n  \n  const { handleSubmit, register, errors, reset, getValues, setValue } = useForm();\n  const onSubmit = data => {\n    const { email, password, tel } = data;\n    let users = JSON.parse(localStorage.getItem('users')) || [];\n    \n    let encodedPass = Base64.encode(password);\n    let userData = {\n      email,\n      password: encodedPass,\n      tel: tel.replace(/ /g, '')\n    }\n\n    users.push(userData);\n    localStorage.setItem('users', JSON.stringify(users));\n    reset();\n    setValue('tel', '');\n    setModal({ isShow: true, title: 'Вы зарегистрированы' });\n    setTimeout(() => {\n      setModal({ isShow: false, title: 'Вы зарегистрированы' });\n    }, 5000);\n    setTimeout(() => {\n      setModal({ isShow: false, title: '' });\n    }, 6000);\n  };\n\n  const inputs = {\n    firstName: {\n      name: 'firstName',\n      label: 'Имя',\n      errorTypes: {\n        required: 'Это поле обязательно для заполнения'\n      },\n      validators: {\n        required: true\n      }\n    },\n    nickName: {\n      name: 'nickName',\n      label: 'Никнейм',\n      errorTypes: {\n        required: 'Это поле обязательно для заполнения'\n      },\n      validators: {\n        required: true\n      }\n    }\n    ,\n    email: {\n      name: 'email',\n      label: 'Email',\n      errorTypes: {\n        required: 'Это поле обязательно для заполнения',\n        \n      },\n      validators: {\n        required: true,\n        pattern: /^((?!\\.)[\\w-_.]*[^.])(@\\w+)(\\.\\w+(\\.\\w+)?[^.\\W])$/gim\n      }\n    },\n    tel: {\n      name: 'tel',\n      label: 'Телефон',\n      type: 'tel',\n      mask: '+ 7 \\999 999 99 99',\n      errorTypes: {\n        required: 'Это поле обязательно для заполнения',\n        validate: 'Минимальная длинна 11 символов'\n      },\n      validators: {\n        required: true,\n        validate: value => {\n          let pureValue = value.replace(/_/g, '').replace(/ /g, '');\n          if (pureValue.length < 11) return false;\n          return true\n        }\n      }\n    },\n    password: {\n      name: 'password',\n      label: 'Пароль',\n      type: 'password',\n      errorTypes: {\n        required: 'Это поле обязательно для заполнения',\n        pattern: 'Слабый пароль'\n      },\n      validators: {\n        required: true,\n        pattern: /^(?=.*\\d)(?=.*[A-Z])(?=.*[a-z])(?=.*[^\\w\\d\\s:])([^\\s]){8,16}$/\n      }\n    },\n    agree: {\n      name: 'agree',\n      label: 'Я даю свое согласие на обработку персональных данных',\n      type: 'checkbox',\n      errorTypes: {\n        required: 'Это поле обязательно для заполнения'\n      },\n      validators: {\n        required: true\n      }\n    }\n  }\n\n  return (\n    <form className='form' onSubmit={handleSubmit(onSubmit)}>\n      <h1 className='form__title'>Регистрация</h1>\n      <p className='form__under-title'>Введите свои данные</p>\n      <div className='form__body'>\n        {\n          Object.values(inputs).map(({...values}) => {\n            if (values.type === 'checkbox') {\n              return <CheckBox propsInput={values} key={values.name} errors={errors} register={register} />\n            }\n            return <Input propsInput={values} key={values.name} errors={errors} register={register} getValues={getValues} />\n          })\n        }\n        <div className='form__submit'>\n          <button className='btn btn-rect' type='submit'>Зарегистрироваться</button>\n        </div>\n        <div className='form__footer'>\n          <p>Есть аккаунт? <Link to='/login'>Войти</Link></p>\n        </div>\n      </div>\n    </form>\n  )\n}\n\nexport default RegistForm;","import React from 'react';\n\nimport {SuccessSvg} from '../icons';\n\nconst ModalWindow = ({title}) => {\n  return (\n  <div className='modal-window'>\n    <SuccessSvg className={'animateSvg'}/>\n    {title}\n  </div>\n  )\n}\n\nexport default ModalWindow;","import React, {useState} from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n} from 'react-router-dom';\nimport { CSSTransition } from \"react-transition-group\";\n\nimport SingInForm from '../SingInForm';\nimport RegistForm from '../RegistForm';\nimport ModalWindow from '../ModalWindow';\n\nconst App = () => {\n  const [modal, showModal] = useState({ isShow: false, title: '' });\n\n  return (\n    <>\n      <Router>\n        <Route path='/' exact>\n          {\n            ({ match }) => (\n              <CSSTransition in={match != null} timeout={300} classNames=\"page\" unmountOnExit>\n                <div className=\"page\">\n                  <RegistForm setModal={showModal} />\n                </div>\n              </CSSTransition>\n            )\n          }\n        </Route>\n        <Route path='/login'>\n          {\n            ({ match }) => (\n              <CSSTransition in={match != null} timeout={300} classNames=\"page\" unmountOnExit>\n                <div className=\"page\">\n                  <SingInForm setModal={showModal} />\n                </div>\n              </CSSTransition>\n            )\n          }\n        </Route>\n      </Router>\n      <CSSTransition in={modal.isShow} classNames=\"fade\" unmountOnExit timeout={1000}>\n        <ModalWindow title={modal.title} />\n      </CSSTransition>\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './main.scss';\n\nimport App from './components/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'));"],"sourceRoot":""}